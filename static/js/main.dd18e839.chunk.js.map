{"version":3,"sources":["components/Header.js","constants/ActionTypes.js","services/todo.services.js","actions/index.js","containers/TodoInput.js","components/TodoItem.js","components/TodoList.js","constants/FilterTypes.js","containers/FilterTodoList.js","components/Tabs.js","containers/FilterTabs.js","components/App.js","reducers/todos.js","reducers/todoFilter.js","reducers/index.js","index.js","utils/localStorage.js"],"names":["HeaderWrapper","styled","div","Header","ADD_TODO","DELETE_TODO","ADD_MULTI_TODO","TOGGLE_TODO","SET_TODO_FILTER","axios","get","addMultiTodo","todos","type","types","data","map","todo","id","toString","text","title","TodoInputWrapper","InputWrapper","input","AddButton","button","connect","dispatch","onSubmit","e","preventDefault","value","trim","uuidv4","placeholder","ref","node","Checkbox","attrs","DeleteButton","TodoText","props","completed","TodoWrappper","Todo","onTodoClick","onDeleteClick","onClick","checked","onChange","prototype","PropTypes","string","isRequired","bool","func","TodoListWrapper","TodoList","fetchTodo","useEffect","TodoItem","FILTER_TODO_ALL","FILTER_TODO_ACTIVE","FILTER_TODO_COMPLETED","FilterToList","state","filteredTodos","todoFilter","filter","t","a","TodoServices","getAllTodo","slice","console","log","toggleTodo","deleteTodo","TabWrapper","Tab","focused","Tabs","setTodoFilter","tabs","filters","tab","GlobalStyle","createGlobalStyle","AppWrapper","App","FilterTabs","FilterTodoList","action","temp","forEach","item","find","push","todoApp","combineReducers","middleware","thunk","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducer","applyMiddleware","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd18e839.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderWrapper = styled.div`\n  font-size: 32px;\n  color: black;\n  letter-spacing: 0.05rem;\n  .span {\n    margin-bottom: 12px;\n  }\n`;\n\nconst Header = () => <HeaderWrapper>Todo List</HeaderWrapper>;\n\nexport default Header;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const ADD_MULTI_TODO = \"ADD_MULTI_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_TODO_FILTER = \"SET_TODO_FILTER\";\n","import axios from \"axios\";\n\nconst API_URL = \"https://jsonplaceholder.typicode.com\";\n\nclass TodoService {\n  getAllTodo() {\n    return axios.get(`${API_URL}/todos`);\n  }\n}\n\nexport default new TodoService();\n","import { v4 as uuidv4 } from \"uuid\";\nimport * as types from \"../constants/ActionTypes\";\nimport TodoServices from \"../services/todo.services\";\n\nexport const fetchTodo = () => async (dispatch) => {\n  try {\n    let { data } = await TodoServices.getAllTodo();\n    dispatch(addMultiTodo(data.slice(0, 10)));\n  } catch (e) {\n    // handle network error\n    console.log(\"Cannot load data\");\n  }\n};\n\nexport const addMultiTodo = (todos) => ({\n  type: types.ADD_MULTI_TODO,\n  data: todos.map((todo) => ({\n    id: todo.id.toString(),\n    text: todo.title,\n  })),\n});\n\nexport const deleteTodo = (id) => ({\n  type: types.DELETE_TODO,\n  id,\n});\n\nexport const addTodo = (text) => ({\n  type: types.ADD_TODO,\n  id: uuidv4(),\n  text,\n});\n\nexport const toggleTodo = (id) => ({\n  type: types.TOGGLE_TODO,\n  id,\n});\n\nexport const setTodoFilter = (filter) => ({\n  type: types.SET_TODO_FILTER,\n  filter,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../actions\";\nimport styled from \"styled-components\";\n\nconst TodoInputWrapper = styled.div`\n  padding: 12px 0;\n  form {\n    display: flex;\n    flex-grow: 1;\n  }\n  input {\n    background: white;\n    color: black;\n    border: 1px solid white;\n    ::placeholder {\n      color: #bbb;\n    }\n  }\n`;\n\nconst InputWrapper = styled.input`\n  padding: 12px;\n  flex-grow: 8;\n`;\n\nconst AddButton = styled.button`\n  flex-grow: 1;\n  cursor: pointer;\n  text-align: center;\n  background: #e0e0e0;\n  color: black;\n  padding: 8px;\n  border: none;\n  border: 1px solid white;\n  border-radius: 8px;\n  margin: 0 8px;\n  &:hover {\n    background: white;\n    color: black;\n  }\n`;\n\nlet TodoInput = ({ dispatch }) => {\n  let input;\n\n  return (\n    <TodoInputWrapper>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = \"\";\n        }}\n      >\n        <InputWrapper\n          placeholder=\"Input your todos\"\n          ref={(node) => {\n            input = node;\n          }}\n        />\n        <AddButton type=\"submit\">Add Todo</AddButton>\n      </form>\n    </TodoInputWrapper>\n  );\n};\n\nexport default connect()(TodoInput);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Checkbox = styled.input.attrs({ type: \"checkbox\" })`\n  width: 25px;\n  height: 25px;\n  min-width: 25px;\n  text-align: left;\n  display: block;\n  border: 1.5px solid #bbbbbb;\n  border-radius: 6px;\n  background-color: #e7e6e7;\n  margin-right: 15px;\n  &:checked {\n    background-color: #ff0000;\n  }\n  &:focus {\n    outline: none !important;\n  }\n`;\n\nconst DeleteButton = styled.div`\n  cursor: pointer;\n  align-self: center;\n  padding: 12px 16px;\n`;\n\nconst TodoText = styled.div`\n  flex-grow: 1;\n  text-decoration: ${(props) => (props.completed ? \"line-through\" : \"none\")};\n`;\n\nconst TodoWrappper = styled.div`\n  display: flex;\n  margin: 8px 16px;\n  padding: 16px;\n  align-items: center;\n  background: #cfcfcf;\n  color: black;\n  cursor: pointer;\n  @media only screen and (max-width: 600px) {\n    padding: 8px;\n  }\n`;\n\nconst Todo = ({ text, completed, onTodoClick, onDeleteClick }) => (\n  <TodoWrappper onClick={onTodoClick}>\n    <Checkbox checked={completed} onChange={(e) => {}} />\n    <TodoText completed={completed}>{text}</TodoText>\n    <DeleteButton onClick={onDeleteClick}>&times;</DeleteButton>\n  </TodoWrappper>\n);\n\nTodo.prototype = {\n  text: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\nimport styled from \"styled-components\";\n\nconst TodoListWrapper = styled.div`\n  background: #f0f0f0;\n  height: 500px;\n  overflow-y: scroll;\n  padding-top: 8px;\n  @media only screen and (max-width: 600px) {\n    height: calc(100vh - 210px);\n  }\n`;\n\nconst TodoList = ({ todos, fetchTodo, onTodoClick, onDeleteClick }) => {\n  useEffect(() => {\n    fetchTodo();\n  }, []);\n\n  return (\n    <TodoListWrapper>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          onTodoClick={() => onTodoClick(todo.id)}\n          onDeleteClick={() => onDeleteClick(todo.id)}\n        />\n      ))}\n    </TodoListWrapper>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired\n  ).isRequired,\n  onTodoClick: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","export const FILTER_TODO_ALL = \"FILTER_TODO_ALL\";\nexport const FILTER_TODO_ACTIVE = \"FILTER_TODO_ACTIVE\";\nexport const FILTER_TODO_COMPLETED = \"FILTER_TODO_COMPLETED\";\n","import { connect } from \"react-redux\";\nimport TodoList from \"../components/TodoList\";\nimport { toggleTodo, deleteTodo, fetchTodo } from \"../actions\";\nimport {\n  FILTER_TODO_ALL,\n  FILTER_TODO_ACTIVE,\n  FILTER_TODO_COMPLETED,\n} from \"../constants/FilterTypes\";\n\nconst FilterToList = connect(\n  (state) => {\n    let filteredTodos;\n    switch (state.todoFilter) {\n      case FILTER_TODO_ALL:\n        filteredTodos = state.todos;\n        break;\n      case FILTER_TODO_COMPLETED:\n        filteredTodos = state.todos.filter((t) => t.completed);\n        break;\n      case FILTER_TODO_ACTIVE:\n        filteredTodos = state.todos.filter((t) => !t.completed);\n        break;\n      default:\n        filteredTodos = state.todos;\n    }\n\n    return {\n      todos: filteredTodos,\n    };\n  },\n  (dispatch) => ({\n    fetchTodo: () => dispatch(fetchTodo()),\n    onTodoClick: (id) => dispatch(toggleTodo(id)),\n    onDeleteClick: (id) => dispatch(deleteTodo(id)),\n  })\n)(TodoList);\n\nexport default FilterToList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport * as filters from \"../constants/FilterTypes\";\n\nconst TabWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Tab = styled.div`\n  flex-grow: 1;\n  text-align: center;\n  cursor: pointer;\n  background: ${(props) => (props.focused ? \"#707070\" : \"#aeaeae\")};\n  color: white;\n  padding: 8px;\n  border: 1px solid white;\n`;\n\nconst Tabs = ({ todoFilter, setTodoFilter }) => {\n  let tabs = [\n    {\n      text: \"All\",\n      filter: filters.FILTER_TODO_ALL,\n    },\n    {\n      text: \"Active\",\n      filter: filters.FILTER_TODO_ACTIVE,\n    },\n    {\n      text: \"Completed\",\n      filter: filters.FILTER_TODO_COMPLETED,\n    },\n  ];\n  return (\n    <TabWrapper>\n      {tabs.map((tab) => (\n        <Tab\n          key={tab.text}\n          focused={todoFilter === tab.filter ? true : false}\n          onClick={() => setTodoFilter(tab.filter)}\n        >\n          {tab.text}\n        </Tab>\n      ))}\n    </TabWrapper>\n  );\n};\n\nTabs.prototype = {\n  todoFilter: PropTypes.string.isRequired,\n  setTodoFilter: PropTypes.func.isRequired,\n};\n\nexport default Tabs;\n","import { connect } from \"react-redux\";\nimport Tabs from \"../components/Tabs\";\nimport { setTodoFilter } from \"../actions\";\n\nexport default connect(\n  (state) => ({\n    todoFilter: state.todoFilter,\n  }),\n  (dispatch) => ({\n    setTodoFilter: (filter) => dispatch(setTodoFilter(filter)),\n  })\n)(Tabs);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport AddTodo from \"../containers/TodoInput\";\nimport FilterTodoList from \"../containers/FilterTodoList\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\nimport FilterTabs from \"../containers/FilterTabs\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: \"Quicksand\", sans-serif;\n    background: #555;\n    margin: 8px;\n  }\n`;\n\nconst AppWrapper = styled.div`\n  margin: 36px auto;\n  padding: 24px 32px 36px 32px;\n  max-width: 380px;\n  min-height: 600px;\n  background: #e0e0e0;\n  border-radius: 12px;\n  color: white;\n  @media only screen and (max-width: 600px) {\n    margin: 0px auto;\n    padding: 24px 32px 24px 32px;\n    min-height: unset;\n  }\n`;\n\nconst App = () => (\n  <AppWrapper>\n    <GlobalStyle />\n    <Header />\n    <AddTodo />\n    <FilterTabs />\n    <FilterTodoList />\n  </AppWrapper>\n);\n\nexport default App;\n","import * as types from \"../constants/ActionTypes\";\n\nconst todo = (state, action) => {\n  switch (action.type) {\n    case types.ADD_TODO:\n      return {\n        id: action.id,\n        text: action.text,\n        completed: false,\n      };\n    case types.TOGGLE_TODO:\n      return {\n        ...state,\n        completed: !state.completed,\n      };\n    default:\n      return state;\n  }\n};\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case types.ADD_MULTI_TODO:\n      let temp = [];\n      action.data.forEach((item) => {\n        if (!state.find((item) => item.id))\n          temp.push({ id: item.id, text: item.text, completed: false });\n      });\n      return [...state, ...temp];\n    case types.ADD_TODO:\n      return [...state, todo(null, action)];\n    case types.DELETE_TODO:\n      return state.filter((item) => item.id !== action.id);\n    case types.TOGGLE_TODO:\n      return state.map((item) => {\n        if (item.id === action.id) {\n          return todo(item, action);\n        }\n        return item;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import * as types from \"../constants/ActionTypes\";\nimport * as filters from \"../constants/FilterTypes\";\n\nconst todoFilter = (state = filters.FILTER_TODO_ALL, action) => {\n  switch (action.type) {\n    case types.SET_TODO_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default todoFilter;\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport todoFilter from \"./todoFilter\";\n\nconst todoApp = combineReducers({\n  todos,\n  todoFilter,\n});\n\nexport default todoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport throttle from \"lodash/throttle\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { loadState, saveState } from \"./utils/localStorage\";\n\nconst middleware = [thunk];\nconst persistedState = loadState();\nconst store = createStore(\n  reducer,\n  persistedState,\n  applyMiddleware(...middleware)\n);\n\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      todos: store.getState().todos,\n    });\n  }, 1000)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {}\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (err) {}\n};\n"],"sourceRoot":""}